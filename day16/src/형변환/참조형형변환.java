package 형변환;

import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JLabel;

public class 참조형형변환 {

	public static void main(String[] args) {
		//배열의 형변환은 없다.
		//클래스간, 클래스와 인터페이스간 
		//상속, 구현관계에서만 가능
		//자동차타이어(무늬,휠모양) <- 한국타이어, 금호타이어
		//장난감타이어(무늬,휠모양) //상속관계가 아니면 형변환을 할 수 없다~ 
		//자동차타이어(큰) <- 한국타이어(작) , 작은게 큰데로 들어가는거니까 자동형변환이겠죠 
		//한국타이어(작)   < -자동차타이어(큰) //이건 안된다.,강제형변환해야함 
		//상속관계에서의 대소는 개념으로 구분!
		//자동차 타이어가 더 큰개념.
		
		//직원은 성인이면 된다.
		//성인 <- 남자성인18, 여자성인18 //성인을 만족하므로 상속관계이므로 직원으로 채용가능.
		//아이, 상속관계가 아니기 때문에 직원으로 뽑을수없다 
		
//		f.add(Component c)  <-26개의 자식들이 다 들어올수있다
		//자동 형변환, 업캐스팅이라고 부른다.  
		//강제 형변환은 밑으로 내려가니깐 다운캐스팅 이라한다: 소괄호를 사용해라!! 
		
		ArrayList list = new ArrayList(); 
		//아무거나 다 들어가고, 크기도 조절가능 
		// Object는 모든 클래스의 부모이다. 최상위부모 ,맨위,
		
		//업캐스팅되어 들어가므로 모두다들어갈수있는것임
		//부모자리로 맞추어 놓으면, 그 아래에 있는 
		//자식이나, 후손이 부모자리에 다 들어갈 수 있는것을 업캐스팅이라 한다.
		//자동형변환 
		
		list.add("고구마");
		list.add(100); //기본형이랑 오브젝이랑 상속관계가있나?  Integer(포장클래스라 부른다)
		// 기본형 --오토박싱-->포장클래스--업캐스팅 --> Object(가장큼)
		
		
		// 기본형----(포장,boxing) 포장클래스  Integer 기본형을 인티저로 만들기위해서 포장클래스를 만들었다.
		// 기본형을 <-- (포장을풀고 , unboxing) -- 포장클래스가 다시 기본형처럼 사용됨  
		//자동 박싱, 언박싱  (auto boxing, unboxing 이라 한다. 
		list.add(11.22);  //Double
		list.add(true); //boolean
		list.add(new JButton());
		list.add(new JLabel());
		
		//꺼내는거
		
		
		byte  b =100;
		int a=b;
		
		Object food=list.get(0);//푸드라는 변수에 꺼내본다.  Object
		//여기서 문제가있다. 
		
		String food2 =(String)list.get(0);
		//오브젝이 상위인데 상위에서 스트링으로 다시갈때는 강제형변환 해줘야함 
		
		
	}

}
